@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@model IPaginated

@if (Model.TotalPageCount <= 1)
{
    return;
}

@{
    var action = ViewContext.RouteData.Values["action"].ToString();
    var routeData = HttpContextAccessor.HttpContext.Request.QueryString.RouteValues();
    if (!routeData.ContainsKey("page"))
    {
        routeData.Add("page", null);
    }

    var originalRouteData = new RouteValueDictionary(routeData);

    var pageSpan = 1;
}

<ul class="pagination pagination-rounded justify-content-end mb-0 mt-2">
    @{
        routeData["page"] = Model.PageIndex != 2 ? Model.PageIndex - 1 : (int?)null;
        if (Model.PageIndex > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@(Url.Action(action, routeData))" aria-label="Previous">
                    <span aria-hidden="true">«</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
        }
    }

    @for (int i = 1; i <= Model.TotalPageCount; i++)
    {
        if (Model.TotalPageCount >= 7 && (i > Model.PageIndex + pageSpan || i < Model.PageIndex - pageSpan) && i != 1 && i != Model.TotalPageCount)
        {
            continue;
        }

        if (Model.TotalPageCount >= 7 && i == Model.TotalPageCount && Model.PageIndex + pageSpan + 1 < Model.TotalPageCount)
        {
            <li class="page-item disabled"><a class="page-link" href="javascript:;">...</a></li>
        }

        routeData["page"] = i != 1 ? i : (int?)null;
        if (Model.PageIndex == i)
        {
            <li class="page-item active"><a class="page-link">@i</a></li>
        }
        else
        {
            <li class="page-item"><a class="page-link" href="@(Url.Action(action, routeData))">@i</a></li>
        }
        if (Model.TotalPageCount >= 7 && i == 1 && Model.PageIndex - pageSpan - 1 > 1)
        {
            <li class="page-item disabled"><a class="page-link" href="javascript:;">...</a></li>
        }
    }

    @{
        routeData["page"] = Model.PageIndex + 1;
        if (Model.PageIndex < Model.TotalPageCount)
        {
            <li class="page-item">
                <a class="page-link" href="@(Url.Action(action, routeData))" aria-label="Next">
                    <span aria-hidden="true">»</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        }
    }
</ul>